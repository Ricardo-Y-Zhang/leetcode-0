class Solution {
    public int coinChange(int[] coins, int amount) {
        Arrays.sort(coins);
        int n = coins.length;
        int[][] dp = new int[n+1][amount+1];
        for (int i = 0; i < n + 1; i++) {
            Arrays.fill(dp[i], Integer.MAX_VALUE);
            dp[i][0] = 0;
        }
        for (int i = 1; i < n + 1; i++) {
            for (int j = 0; j < amount+1; j++) {
                for (int k = j, count = 0; k >= 0; k -= coins[i-1],count++){
                    if (dp[i-1][k] != Integer.MAX_VALUE) dp[i][j] = Math.min(dp[i][j], dp[i-1][k]+count);
                }
            }
        }
        return dp[n][amount]==Integer.MAX_VALUE ? -1 : dp[n][amount];
    }
}

//runtime:544 ms
//memory:41.7 MB
